away = end_games |> filter(away_team == team) |> pull(home_score)
return(round(sd(c(home, away)), 2))
}
runs_sd = data.frame(team = all_teams) |>
mutate(scored_sd = sapply(team, get_scored_sd),
allowed_sd = sapply(team, get_allowed_sd))
runs_sd |>
inner_join(teams_info, by = "team") |>
ggplot(aes(scored_sd, allowed_sd)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
scale_color_manual(values = team_hex) +
geom_hline(yintercept = mean(runs_sd$allowed_sd), linetype = "dashed", alpha = 0.25) +
geom_vline(xintercept = mean(runs_sd$scored_sd), linetype = "dashed", alpha = 0.25) +
labs(x = "Runs Scored SD", y = "Runs Allowed SD",
title = "Volatility Scatterplot") +
scale_x_continuous(breaks = seq(0, 5, by = 0.25)) +
scale_y_continuous(breaks = seq(0, 5, by = 0.25))
rx = runs_sd |>
mutate(total_sd = scored_sd + allowed_sd) |>
slice_max(total_sd, n = 3, with_ties = F) |>
mutate(x = paste0(team, " (", total_sd, ")"))
sx = runs_sd |>
mutate(total_sd = scored_sd + allowed_sd) |>
slice_max(scored_sd, n = 3, with_ties = F) |>
mutate(x = paste0(team, " (", scored_sd, ")"))
ax = runs_sd |>
mutate(total_sd = scored_sd + allowed_sd) |>
slice_max(allowed_sd, n = 3, with_ties = F) |>
mutate(x = paste0(team, " (", allowed_sd, ")"))
end_margins = end_games |>
mutate(margin = win_score - lose_score)
get_team_avg_margin = function(team) {
x = end_margins |>
filter(home_team == team | away_team == team) |>
pull(margin)
return(round(mean(x), 2))
}
team_margins = data.frame(team = all_teams) |>
mutate(avg_margin = sapply(team, get_team_avg_margin))
margins_records = team_records |>
select(team, pct) |>
inner_join(team_margins, by = "team")
end_games |>
mutate(runs = win_score + lose_score) |>
count(runs) |>
ggplot(aes(runs, n)) +
geom_col(fill = "springgreen4") +
labs(x = "Runs Scored", y = "Frequency",
title = "Runs Scored per Game, 2024") +
scale_x_continuous(breaks = seq(0, 100, by = 1)) +
theme(axis.text.y = element_blank()) +
geom_text(aes(label = n), size = 3, vjust = -0.5)
onerun = end_games |>
mutate(margin = win_score - lose_score,
home_win = ifelse(home_team == win_team, 1, 0)) |>
filter(margin == 1) |>
count(win_team) |>
set_names(c("team", "wins")) |>
full_join(end_games |>
mutate(margin = win_score - lose_score,
home_win = ifelse(home_team == win_team, 1, 0)) |>
filter(margin == 1) |>
count(lose_team) |>
set_names(c("team", "losses")), by = "team") |>
inner_join(teams_info, by = "team") |>
mutate(wins = coalesce(wins, 0),
losses = coalesce(losses, 0),
total = wins + losses,
pct = round(wins / total * 100, 2))
onerun |>
ggplot(aes(total, pct)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3, segment.alpha = 0.25) +
geom_vline(xintercept = mean(onerun$total), linetype = "dashed", alpha = 0.25) +
geom_hline(yintercept = 50, linetype = "dashed", alpha = 0.25) +
labs(x = "Number of One-Run Games Played", y = "Win Percentage in One-Run Games",
title = "One-Run Game Performance") +
scale_x_continuous(breaks = seq(0, 100, by = 1)) +
scale_y_continuous(breaks = seq(0, 100, by = 10))
team_records |>
distinct(team, pct) |>
inner_join(team_npr |>
distinct(team, total_npr), by = "team") |>
inner_join(teams_info, by = "team") |>
ggplot(aes(total_npr, pct)) +
geom_point(aes(col = team), size = 4, shape = "square", show.legend = F) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
scale_color_manual(values = team_hex) +
geom_line(stat = "smooth", formula = y ~ x, method = "lm", se = F,
col = "black", linetype = "dashed", alpha = 0.5) +
labs(x = "Total NPR", y = "Win Percentage",
title = "Scatterplot of NPR and Win Percentage",
subtitle = "Teams above/below dashed line are worse/better than their record") +
scale_x_continuous(breaks = seq(-5, 5, by = 0.25)) +
scale_y_continuous(breaks = seq(0, 100, by = 10)) +
geom_hline(yintercept = 50, linetype = "dotted", col = "black", alpha = 0.2) +
geom_vline(xintercept = 0, linetype = "dotted", col = "black", alpha = 0.2)
get_team_last_10 = function(team) {
games = end_games |> filter(home_team == team | away_team == team) |> slice_max(date, n = 10, with_ties = F)
wins = games |> filter(win_team == team) |> nrow()
losses = games |> filter(lose_team == team) |> nrow()
return(paste0(wins, "-", losses))
}
last10 = data.frame(team = all_teams) |>
mutate(last10 = sapply(team, get_team_last_10)) |>
separate(last10, into = c("wins", "losses"), sep = "-", convert = T, remove = F) |>
mutate(pct = wins / (wins + losses) * 100) |>
arrange(desc(pct), team) |>
head(10) |>
mutate(x = paste0(team, " (", wins, "-", losses, ")"))
get_pct_on = function(team, dt) {
games = end_games |> filter((home_team == team | away_team == team) & date <= dt)
wins = games |> filter(win_team == team) |> nrow()
ls = games |> filter(lose_team == team) |> nrow()
pct = round(wins / (wins + ls) * 100, 1)
return(pct)
}
get_record_on = function(team, dt) {
games = end_games |> filter((home_team == team | away_team == team) & date <= dt)
if (nrow(games) == 0) return("NO GAMES YET")
wins = games |> filter(win_team == team) |> nrow()
ls = games |> filter(lose_team == team) |> nrow()
str = paste0(wins, "-", ls)
return(str)
}
all_game_dates = sort(unique(end_games$date))
time_records = crossing(date = all_game_dates, team = all_teams) |>
rowwise() |>
mutate(win_pct = get_pct_on(team = team, dt = date),
record = get_record_on(team = team, dt = date)) |>
ungroup() |>
filter(record != "NO GAMES YET")
time_records |>
ggplot(aes(date, win_pct)) +
geom_line(aes(col = team), linewidth = 1, show.legend = F) +
scale_color_manual(values = team_hex) +
scale_x_continuous(breaks = seq.Date(from = min(end_games$date), to = max(end_games$date), by = 7)) +
labs(x = NULL, y = "Win Percentage",
title = "Team Win Percentages over Time")
get_game_first_score_team = function(pk) {
x = mlb_pbp(pk) |>
mutate(about.startTime = as_datetime(about.startTime)) |>
filter(result.awayScore > 0 | result.homeScore > 0) |>
slice_min(about.startTime, n = 1, with_ties = F) |>
pull(batting_team) |>
unlist()
return(x[1])
}
end_first_scores = end_games |>
mutate(first_scorer = sapply(game_pk, get_game_first_score_team))
end_first_scores
end_first_scores |>
count(first_scorer)
end_first_scores |>
count(first_scorer) |>
arrange(desc(n))
end_first_scores |>
count(first_scorer) |>
arrange(desc(n)) |>
rename(team = first_scorer, first_scores = n)
team_records
team_records |>
transmute(team, gp = wins + losses, win_pct = pct)
end_first_scores |>
count(first_scorer) |>
arrange(desc(n)) |>
rename(team = first_scorer, first_scores = n) |>
inner_join(team_records |>
transmute(team, gp = wins + losses, win_pct = pct), by = "team")
end_first_scores |>
count(first_scorer) |>
arrange(desc(n)) |>
rename(team = first_scorer, first_scores = n) |>
inner_join(team_records |>
transmute(team, gp = wins + losses, win_pct = pct), by = "team") |>
mutate(first_score_rate = first_scores / gp * 100)
end_first_scores |>
count(first_scorer) |>
arrange(desc(n)) |>
rename(team = first_scorer, first_scores = n) |>
inner_join(team_records |>
transmute(team, gp = wins + losses, win_pct = pct), by = "team") |>
mutate(first_score_rate = round(first_scores / gp * 100, 1))
first_score_rates = end_first_scores |>
count(first_scorer) |>
arrange(desc(n)) |>
rename(team = first_scorer, first_scores = n) |>
inner_join(team_records |>
transmute(team, gp = wins + losses, win_pct = pct), by = "team") |>
mutate(first_score_rate = round(first_scores / gp * 100, 1))
get_team_win_pct_when_first_score = function(team) {
data = end_games |> filter(first_score == team)
wins = data |> filter(win_team == team) |> nrow()
losses = data |> filter(lose_team == team) |> nrow()
return(round(wins / (wins + losses) * 100, 1))
}
get_team_win_pct_when_first_score(team = "Chicago Cubs")
get_team_win_pct_when_first_score = function(team) {
data = end_first_scores |> filter(first_score == team)
wins = data |> filter(win_team == team) |> nrow()
losses = data |> filter(lose_team == team) |> nrow()
return(round(wins / (wins + losses) * 100, 1))
}
get_team_win_pct_when_first_score(team = "Chicago Cubs")
end_first_scores
get_team_win_pct_when_first_score = function(team) {
data = end_first_scores |> filter(first_scorer == team)
wins = data |> filter(win_team == team) |> nrow()
losses = data |> filter(lose_team == team) |> nrow()
return(round(wins / (wins + losses) * 100, 1))
}
get_team_win_pct_when_first_score(team = "Chicago Cubs")
get_team_win_pct_when_first_score(team = "Los Angeles Dodgers")
first_score_rates
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score))
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
ggplot(aes(first_score_rate, win_pct_on_first_score))
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point()
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F)
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F)
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex)
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3)
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
geom_line(stat = "smooth", method = "lm")
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
geom_line(stat = "smooth", method = "lm", formula = y ~ x, linetype = "dashed", alpha = 0.25)
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
geom_line(stat = "smooth", method = "lm", formula = y ~ x, linetype = "dashed", alpha = 0.5)
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
geom_line(stat = "smooth", method = "lm", formula = y ~ x, linetype = "dashed", alpha = 0.5) +
labs(x = "First Score Rate", y = "Win Percentage When Scoring First",
title = "Which teams capitalize on an early lead?")
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
geom_line(stat = "smooth", method = "lm", formula = y ~ x, linetype = "dashed", alpha = 0.5) +
labs(x = "First Score Rate", y = "Win Percentage When Scoring First",
title = "Which teams capitalize on an early lead?") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(0, 100, by = 5))
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
geom_line(stat = "smooth", method = "lm", formula = y ~ x, linetype = "dashed", alpha = 0.5) +
geom_vline(xintercept = 50, linetype = "dotted", alpha = 0.5) +
geom_hline(yintercept = 50, linetype = "dashed", alpha = 0.5) +
labs(x = "First Score Rate", y = "Win Percentage When Scoring First",
title = "Which teams capitalize on an early lead?") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(0, 100, by = 5))
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
geom_line(stat = "smooth", method = "lm", formula = y ~ x, linetype = "dashed", alpha = 0.5) +
geom_vline(xintercept = 50, linetype = "dotted", alpha = 0.5) +
geom_hline(yintercept = 50, linetype = "dotted", alpha = 0.5) +
labs(x = "First Score Rate", y = "Win Percentage When Scoring First",
title = "Which teams capitalize on an early lead?") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(0, 100, by = 5))
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
geom_line(stat = "smooth", method = "lm", formula = y ~ x, linetype = "dashed", alpha = 0.5) +
geom_vline(xintercept = 50, linetype = "dotted", alpha = 0.25) +
geom_hline(yintercept = 50, linetype = "dotted", alpha = 0.25) +
labs(x = "First Score Rate", y = "Win Percentage When Scoring First",
title = "Which teams capitalize on an early lead?") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(0, 100, by = 5))
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
geom_line(stat = "smooth", method = "lm", formula = y ~ x, linetype = "dashed", alpha = 0.5) +
geom_vline(xintercept = 50, linetype = "dotted", alpha = 0.25) +
geom_hline(yintercept = 50, linetype = "dotted", alpha = 0.25) +
labs(x = "First Score Rate", y = "Win Percentage When Scoring First",
title = "Which teams capitalize on an early lead?",
subtitle = "Teams above/below dashed line are better/worse than average") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(0, 100, by = 5))
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
geom_line(stat = "smooth", method = "lm", formula = y ~ x, linetype = "dashed", alpha = 0.5) +
geom_vline(xintercept = 50, linetype = "dotted", alpha = 0.25) +
geom_hline(yintercept = 50, linetype = "dotted", alpha = 0.25) +
labs(x = "First Score Rate", y = "Win Percentage When Scoring First",
title = "Which teams capitalize on an early lead?",
subtitle = "Teams above/below dashed line are better/worse than league average") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(0, 100, by = 5))
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
geom_line(stat = "smooth", method = "lm", formula = y ~ x, linetype = "dashed", alpha = 0.5) +
geom_vline(xintercept = 50, linetype = "dotted", alpha = 0.25) +
geom_hline(yintercept = 50, linetype = "dotted", alpha = 0.25) +
labs(x = "First Score Rate", y = "Win Percentage When Scoring First",
title = "Which teams capitalize on an early lead?") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(0, 100, by = 5))
end_first_scores
setwd("~/r_projects/mlb24")
write_csv(end_first_scores, "data/first_scorers.csv")
read_csv("data/first_scorers.csv", show_col_types = F)
end_games |>
filter(!game_pk %in% end_first_scores$game_pk)
new_scores = end_games |>
filter(!game_pk %in% end_first_scores$game_pk)
if (nrow(new_scores) == 0) {
return(NULL)
} else {
}
new_scores = end_games |>
filter(!game_pk %in% end_first_scores$game_pk)
if (nrow(new_scores) == 0) {
return(NULL)
} else {
}
break
if (nrow(new_scores) == 0) {
break
} else {
}
if (nrow(new_scores) == 0) {
break()
} else {
}
return("Hello")
if (nrow(new_scores) == 0) {
return("Hello")
} else {
}
new_scores
nrow(new_scores)
print("Hello")
if (nrow(new_scores) > 0) {
new_first_scores = new_scores |>
mutate(first_scorer = sapply(game_pk, get_game_first_score_team))
end_first_scores = rbind(end_first_scores, new_first_scores)
}
end_first_scores
get_game_first_score_team = function(pk) {
x = mlb_pbp(pk) |>
mutate(about.startTime = as_datetime(about.startTime)) |>
filter(result.awayScore > 0 | result.homeScore > 0) |>
slice_min(about.startTime, n = 1, with_ties = F) |>
pull(batting_team) |>
unlist()
return(x[1])
}
# end_first_scores = end_games |>
#   mutate(first_scorer = sapply(game_pk, get_game_first_score_team))
# write_csv(end_first_scores, "data/first_scorers.csv")
end_first_scores = read_csv("data/first_scorers.csv", show_col_types = F)
new_scores = end_games |>
filter(!game_pk %in% end_first_scores$game_pk)
if (nrow(new_scores) > 0) {
new_first_scores = new_scores |>
mutate(first_scorer = sapply(game_pk, get_game_first_score_team))
end_first_scores = rbind(end_first_scores, new_first_scores)
}
end_first_scores
get_game_first_score_team = function(pk) {
x = mlb_pbp(pk) |>
mutate(about.startTime = as_datetime(about.startTime)) |>
filter(result.awayScore > 0 | result.homeScore > 0) |>
slice_min(about.startTime, n = 1, with_ties = F) |>
pull(batting_team) |>
unlist()
return(x[1])
}
# end_first_scores = end_games |>
#   mutate(first_scorer = sapply(game_pk, get_game_first_score_team))
# write_csv(end_first_scores, "data/first_scorers.csv")
end_first_scores = read_csv("data/first_scorers.csv", show_col_types = F)
new_scores = end_games |>
filter(!game_pk %in% end_first_scores$game_pk)
if (nrow(new_scores) > 0) {
new_first_scores = new_scores |>
mutate(first_scorer = sapply(game_pk, get_game_first_score_team))
end_first_scores = rbind(end_first_scores, new_first_scores)
}
write_csv(end_first_scores, "data/first_scorers.csv")
end_first_scores = read_csv("data/first_scorers.csv", show_col_types = F)
end_first_scores
get_game_first_score_team = function(pk) {
x = mlb_pbp(pk) |>
mutate(about.startTime = as_datetime(about.startTime)) |>
filter(result.awayScore > 0 | result.homeScore > 0) |>
slice_min(about.startTime, n = 1, with_ties = F) |>
pull(batting_team) |>
unlist()
return(x[1])
}
# end_first_scores = end_games |>
#   mutate(first_scorer = sapply(game_pk, get_game_first_score_team))
end_first_scores = read_csv("data/first_scorers.csv", show_col_types = F)
new_scores = end_games |>
filter(!game_pk %in% end_first_scores$game_pk)
if (nrow(new_scores) > 0) {
new_first_scores = new_scores |>
mutate(first_scorer = sapply(game_pk, get_game_first_score_team))
end_first_scores = rbind(end_first_scores, new_first_scores)
}
write_csv(end_first_scores, "data/first_scorers.csv")
end_first_scores
first_score_rates = end_first_scores |>
count(first_scorer) |>
arrange(desc(n)) |>
rename(team = first_scorer, first_scores = n) |>
inner_join(team_records |>
transmute(team, gp = wins + losses, win_pct = pct), by = "team") |>
mutate(first_score_rate = round(first_scores / gp * 100, 1))
get_team_win_pct_when_first_score = function(team) {
data = end_first_scores |> filter(first_scorer == team)
wins = data |> filter(win_team == team) |> nrow()
losses = data |> filter(lose_team == team) |> nrow()
return(round(wins / (wins + losses) * 100, 1))
}
first_score_rates |>
mutate(win_pct_on_first_score = sapply(team, get_team_win_pct_when_first_score)) |>
inner_join(teams_info, by = "team") |>
ggplot(aes(first_score_rate, win_pct_on_first_score)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
scale_color_manual(values = team_hex) +
ggrepel::geom_text_repel(aes(label = abb), size = 3) +
geom_line(stat = "smooth", method = "lm", formula = y ~ x, linetype = "dashed", alpha = 0.5) +
geom_vline(xintercept = 50, linetype = "dotted", alpha = 0.25) +
geom_hline(yintercept = 50, linetype = "dotted", alpha = 0.25) +
labs(x = "First Score Rate", y = "Win Percentage When Scoring First",
title = "Which teams capitalize on an early lead?") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(0, 100, by = 5))
