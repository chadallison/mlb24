inner_join(team_records, by = "team") |>
mutate(abb = fct_reorder(abb, -pct)) |>
ggplot(aes(date, roll)) +
geom_line(aes(col = abb), linewidth = 1.25, show.legend = F) +
# geom_line(stat = "smooth", formula = y ~ x, method = "loess", se = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = hex_pct_ordered) +
facet_wrap(vars(abb)) +
theme(axis.text = element_blank()) +
labs(x = NULL, y = "Pythagorean Win Percentage",
title = "Season-long pythagorean win percentage in ten-game rolling windows")
scored_allowed_on_dates |>
mutate(roll_score = rollapply(scored, width = 10, FUN = "sum", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 10, FUN = "sum", align = "right", fill = NA),
pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
na.omit() |>
inner_join(teams_info, by = "team") |>
inner_join(team_records, by = "team") |>
mutate(abb = fct_reorder(abb, -pct)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = abb), linewidth = 1.25, show.legend = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = hex_pct_ordered) +
facet_wrap(vars(abb)) +
theme(axis.text = element_blank()) +
labs(x = NULL, y = "Pythagorean Win Percentage in Ten-Game Window",
title = "Season-long pythagorean win percentages in rolling ten-game windows",
subtitle = "Aggregated runs scored / runs allowed method")
pythag |>
group_by(team) |>
mutate(roll = rollapply(pythag, width = 10, FUN = "mean", align = "right", fill = NA)) |>
ungroup() |>
na.omit() |>
inner_join(teams_info, by = "team") |>
inner_join(team_records, by = "team") |>
mutate(abb = fct_reorder(abb, -pct)) |>
ggplot(aes(date, roll)) +
geom_line(aes(col = abb), linewidth = 1.25, show.legend = F) +
# geom_line(stat = "smooth", formula = y ~ x, method = "loess", se = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = hex_pct_ordered) +
facet_wrap(vars(abb)) +
theme(axis.text = element_blank()) +
labs(x = NULL, y = "Pythagorean Win Percentage",
title = "Season-long pythagorean win percentage in ten-game rolling windows",
subtitle = "Average of individual games method")
scored_allowed_on_dates |>
mutate(roll_score = rollapply(scored, width = 10, FUN = "sum", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 10, FUN = "sum", align = "right", fill = NA),
pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
na.omit() |>
inner_join(teams_info, by = "team") |>
inner_join(team_records, by = "team") |>
mutate(abb = fct_reorder(abb, -pct)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = abb), linewidth = 1.25, show.legend = F) +
geom_line(stat = "smooth", formula = y ~ x, method = "loess", se = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = hex_pct_ordered) +
facet_wrap(vars(abb)) +
theme(axis.text = element_blank()) +
labs(x = NULL, y = "Pythagorean Win Percentage in Ten-Game Window",
title = "Season-long pythagorean win percentages in rolling ten-game windows",
subtitle = "Aggregated runs scored / runs allowed method")
scored_allowed_on_dates |>
mutate(roll_score = rollapply(scored, width = 10, FUN = "sum", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 10, FUN = "sum", align = "right", fill = NA),
pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
na.omit() |>
inner_join(teams_info, by = "team") |>
inner_join(team_records, by = "team") |>
mutate(abb = fct_reorder(abb, -pct)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = abb), linewidth = 1.25, alpha = 0.5, show.legend = F) +
geom_line(stat = "smooth", formula = y ~ x, method = "loess", se = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = hex_pct_ordered) +
facet_wrap(vars(abb)) +
theme(axis.text = element_blank()) +
labs(x = NULL, y = "Pythagorean Win Percentage in Ten-Game Window",
title = "Season-long pythagorean win percentages in rolling ten-game windows",
subtitle = "Aggregated runs scored / runs allowed method")
scored_allowed_on_dates |>
mutate(roll_score = rollapply(scored, width = 10, FUN = "sum", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 10, FUN = "sum", align = "right", fill = NA),
pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
na.omit() |>
inner_join(teams_info, by = "team") |>
inner_join(team_records, by = "team") |>
mutate(abb = fct_reorder(abb, -pct)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = abb), linewidth = 1.25, alpha = 0.75, show.legend = F) +
geom_line(stat = "smooth", formula = y ~ x, method = "loess", se = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = hex_pct_ordered) +
facet_wrap(vars(abb)) +
theme(axis.text = element_blank()) +
labs(x = NULL, y = "Pythagorean Win Percentage in Ten-Game Window",
title = "Season-long pythagorean win percentages in rolling ten-game windows",
subtitle = "Aggregated runs scored / runs allowed method")
scored_allowed_on_dates |>
mutate(roll_score = rollapply(scored, width = 10, FUN = "sum", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 10, FUN = "sum", align = "right", fill = NA),
pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
na.omit() |>
inner_join(teams_info, by = "team") |>
inner_join(team_records, by = "team") |>
mutate(abb = fct_reorder(abb, -pct)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = abb), linewidth = 1.25, show.legend = F) +
geom_line(stat = "smooth", formula = y ~ x, method = "loess", se = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = hex_pct_ordered) +
facet_wrap(vars(abb)) +
theme(axis.text = element_blank()) +
labs(x = NULL, y = "Pythagorean Win Percentage in Ten-Game Window",
title = "Season-long pythagorean win percentages in rolling ten-game windows",
subtitle = "Aggregated runs scored / runs allowed method")
scored_allowed_on_dates |>
mutate(roll_score = rollapply(scored, width = 10, FUN = "sum", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 10, FUN = "sum", align = "right", fill = NA),
pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
na.omit() |>
inner_join(teams_info, by = "team") |>
inner_join(team_records, by = "team") |>
mutate(abb = fct_reorder(abb, -pct)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = abb), linewidth = 1.25, alpha = 0.1, show.legend = F) +
geom_line(stat = "smooth", formula = y ~ x, method = "loess", se = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = hex_pct_ordered) +
facet_wrap(vars(abb)) +
theme(axis.text = element_blank()) +
labs(x = NULL, y = "Pythagorean Win Percentage in Ten-Game Window",
title = "Season-long pythagorean win percentages in rolling ten-game windows",
subtitle = "Aggregated runs scored / runs allowed method")
scored_allowed_on_dates |>
mutate(roll_score = rollapply(scored, width = 10, FUN = "sum", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 10, FUN = "sum", align = "right", fill = NA),
pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
na.omit() |>
inner_join(teams_info, by = "team") |>
inner_join(team_records, by = "team") |>
mutate(abb = fct_reorder(abb, -pct)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = abb), linewidth = 1.25, alpha = 0.25, show.legend = F) +
geom_line(stat = "smooth", formula = y ~ x, method = "loess", se = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = hex_pct_ordered) +
facet_wrap(vars(abb)) +
theme(axis.text = element_blank()) +
labs(x = NULL, y = "Pythagorean Win Percentage in Ten-Game Window",
title = "Season-long pythagorean win percentages in rolling ten-game windows",
subtitle = "Aggregated runs scored / runs allowed method")
scored_allowed_on_dates |>
mutate(roll_score = rollapply(scored, width = 10, FUN = "sum", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 10, FUN = "sum", align = "right", fill = NA),
pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
na.omit() |>
inner_join(teams_info, by = "team") |>
inner_join(team_records, by = "team") |>
mutate(abb = fct_reorder(abb, -pct)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = abb), linewidth = 1.25, show.legend = F) +
# geom_line(stat = "smooth", formula = y ~ x, method = "loess", se = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = hex_pct_ordered) +
facet_wrap(vars(abb)) +
theme(axis.text = element_blank()) +
labs(x = NULL, y = "Pythagorean Win Percentage in Ten-Game Window",
title = "Season-long pythagorean win percentages in rolling ten-game windows",
subtitle = "Aggregated runs scored / runs allowed method")
scored_allowed_on_dates |>
mutate(roll_score = rollapply(scored, width = 10, FUN = "sum", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 10, FUN = "sum", align = "right", fill = NA),
pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
na.omit() |>
inner_join(teams_info, by = "team") |>
inner_join(team_records, by = "team") |>
mutate(abb = fct_reorder(abb, -pct)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = abb), linewidth = 1.25, show.legend = F) +
geom_line(stat = "smooth", formula = y ~ x, method = "loess", se = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = hex_pct_ordered) +
facet_wrap(vars(abb)) +
theme(axis.text = element_blank()) +
labs(x = NULL, y = "Pythagorean Win Percentage in Ten-Game Window",
title = "Season-long pythagorean win percentages in rolling ten-game windows",
subtitle = "Aggregated runs scored / runs allowed method")
tictoc::toc()
tictoc::tic()
scored_allowed_on_dates = crossing(team = all_teams, date = all_szn_dates) |>
rowwise() |>
mutate(scored = get_team_runs_scored_on(tm = team, dt = date),
allowed = get_team_runs_allowed_on(tm = team, dt = date)) |>
ungroup() |>
na.omit()
tictoc::toc()
library(tidyverse)
library(tidymodels)
library(tvthemes)
library(janitor)
library(zoo)
library(nflfastR)
theme_custom = theme_avatar() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, size = 9, vjust = 2.5, face = "italic"),
plot.caption = element_text(face = "italic"),
panel.grid.major = element_line(linewidth = 0.5, colour = "#DFDAD1"),
panel.grid.minor = element_line(linewidth = 0.5, colour = "#DFDAD1"))
theme_set(theme_custom)
season_pbp = load_pbp(season = 2024)
season_pbp = load_pbp(season = 2023)
season_pbp
library(tidyverse)
library(tidymodels)
library(tvthemes)
library(janitor)
library(zoo)
library(nflfastR)
theme_custom = theme_avatar() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, size = 9, vjust = 2.5, face = "italic"),
plot.caption = element_text(face = "italic"),
panel.grid.major = element_line(linewidth = 0.5, colour = "#DFDAD1"),
panel.grid.minor = element_line(linewidth = 0.5, colour = "#DFDAD1"))
theme_set(theme_custom)
season_pbp = load_pbp(season = 2023)
end_games = season_pbp |>
filter(desc == "END GAME") |>
select(game_id, date = game_date, week, away_team, away_score = total_away_score, home_score = total_home_score, home_team) |>
mutate(win_team = case_when(home_score > away_score ~ home_team,
home_score < away_score ~ away_team,
home_score == away_score ~ "Tie"),
win_score = case_when(home_score > away_score ~ home_score,
home_score < away_score ~ away_score,
home_score == away_score ~ home_score),
lose_team = case_when(home_score > away_score ~ away_team,
home_score < away_score ~ home_team,
home_score == away_score ~ "Tie"),
lose_score = case_when(home_score > away_score ~ away_score,
home_score < away_score ~ home_score,
home_score == away_score ~ away_score),
game_margin = win_score - lose_score,
total_points = win_score + lose_score)
all_teams = sort(unique(c(unique(end_games$home_team), unique(end_games$away_team))))
team_hex = teams_colors_logos |>
select(team = team_abbr, team_color) |>
filter(team %in% all_teams) |>
pull(team_color)
end_games
end_games
unique(end_games$date)
sort(unique(end_games$date))
all_szn_dates = sort(unique(end_games$date))
crossing(team = all_teams, date = all_szn_dates)
get_team_scored_on(tm = "CHI", date = "2023-09-10")
return(data)
get_team_scored_on = function(tm, dt) {
data = end_games |>
filter((home_team == tm | away_team == tm) & date == dt)
return(data)
}
get_team_scored_on(tm = "CHI", date = "2023-09-10")
get_team_scored_on(tm = "CHI", dt = "2023-09-10")
get_team_scored_on = function(tm, dt) {
data = end_games |> filter((home_team == tm | away_team == tm) & date == dt)
if (nrow(data) == 0) return(NA)
pts = data |> mutate(my_score = ifelse(home_team == tm, home_score, away_score)) |> pull(my_score)
return(pts)
}
get_team_scored_on(tm = "CHI", dt = "2023-09-10")
get_team_allowed_on = function(tm, dt) {
data = end_games |> filter((home_team == tm | away_team == tm) & date == dt)
if (nrow(data) == 0) return(NA)
pts = data |> mutate(my_score = ifelse(home_team == tm, away_score, home_score)) |> pull(my_score)
return(pts)
}
get_team_scored_on(tm = "CHI", dt = "2023-09-10")
get_team_allowed_on(tm = "CHI", dt = "2023-09-10")
crossing(team = all_teams, date = all_szn_dates) |>
rowwise() |>
mutate(scored = get_team_scored_on(tm = team, dt = date),
allowed = get_team_allowed_on(tm = team, dt = date)) |>
ungroup()
scored_allowed_dates = crossing(team = all_teams, date = all_szn_dates) |>
rowwise() |>
mutate(scored = get_team_scored_on(tm = team, dt = date),
allowed = get_team_allowed_on(tm = team, dt = date)) |>
ungroup() |>
na.omit()
scored_allowed_dates = crossing(team = all_teams, date = all_szn_dates) |>
rowwise() |>
mutate(scored = get_team_scored_on(tm = team, dt = date),
allowed = get_team_allowed_on(tm = team, dt = date)) |>
ungroup() |>
na.omit()
``
scored_allowed_dates
scored_allowed_dates |>
mutate(roll_score = rollapply(scored, width = 3, FUN = "mean", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 3, FUN = "mean", align = "right", fill = NA))
scored_allowed_dates |>
mutate(roll_score = rollapply(scored, width = 3, FUN = "mean", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 3, FUN = "mean", align = "right", fill = NA)) |>
na.omit()
scored_allowed_dates |>
mutate(roll_score = rollapply(scored, width = 3, FUN = "mean", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 3, FUN = "mean", align = "right", fill = NA)) |>
na.omit() |>
mutate(pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2))
scored_allowed_dates |>
mutate(roll_score = rollapply(scored, width = 3, FUN = "mean", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 3, FUN = "mean", align = "right", fill = NA)) |>
na.omit() |>
mutate(pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = team), linewidth = 1.25, show.legend = F) +
facet_wrap(vars(team))
scored_allowed_dates |>
mutate(roll_score = rollapply(scored, width = 3, FUN = "mean", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 3, FUN = "mean", align = "right", fill = NA)) |>
na.omit() |>
mutate(pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = team), linewidth = 1.25, show.legend = F) +
facet_wrap(vars(team)) +
theme(axis.text = element_blank())
scored_allowed_dates |>
mutate(roll_score = rollapply(scored, width = 3, FUN = "mean", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 3, FUN = "mean", align = "right", fill = NA)) |>
na.omit() |>
mutate(pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2))
crossing(team = all_teams, date = all_szn_dates)
scored_allowed_dates = crossing(team = all_teams, date = all_szn_dates) |>
mutate(date = as_date(date)) |>
rowwise() |>
mutate(scored = get_team_scored_on(tm = team, dt = date),
allowed = get_team_allowed_on(tm = team, dt = date)) |>
ungroup() |>
na.omit()
scored_allowed_dates = crossing(team = all_teams, date = all_szn_dates) |>
mutate(date = as_date(date)) |>
rowwise() |>
mutate(scored = get_team_scored_on(tm = team, dt = date),
allowed = get_team_allowed_on(tm = team, dt = date)) |>
ungroup() |>
na.omit()
scored_allowed_dates |>
mutate(roll_score = rollapply(scored, width = 3, FUN = "mean", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 3, FUN = "mean", align = "right", fill = NA)) |>
na.omit() |>
mutate(pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = team), linewidth = 1.25, show.legend = F) +
facet_wrap(vars(team)) +
theme(axis.text = element_blank())
scored_allowed_dates |>
mutate(roll_score = rollapply(scored, width = 3, FUN = "mean", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 3, FUN = "mean", align = "right", fill = NA)) |>
na.omit() |>
mutate(pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = team), linewidth = 1.25, show.legend = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
facet_wrap(vars(team)) +
theme(axis.text = element_blank())
scored_allowed_dates |>
mutate(roll_score = rollapply(scored, width = 3, FUN = "mean", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 3, FUN = "mean", align = "right", fill = NA)) |>
na.omit() |>
mutate(pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = team), linewidth = 1.25, show.legend = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
facet_wrap(vars(team), nrow = 8) +
theme(axis.text = element_blank())
scored_allowed_dates |>
mutate(roll_score = rollapply(scored, width = 3, FUN = "mean", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 3, FUN = "mean", align = "right", fill = NA)) |>
na.omit() |>
mutate(pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = team), linewidth = 1.25, show.legend = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
facet_wrap(vars(team), nrow = 4) +
theme(axis.text = element_blank())
scored_allowed_dates |>
mutate(roll_score = rollapply(scored, width = 3, FUN = "mean", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 3, FUN = "mean", align = "right", fill = NA)) |>
na.omit() |>
mutate(pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = team), linewidth = 1.25, show.legend = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
facet_wrap(vars(team)) +
theme(axis.text = element_blank())
end_games
end_games |>
count(win_team) |>
arrange(desc(n))
end_games |>
count(win_team) |>
arrange(desc(n)) |>
rename(team = win_team, wins = n)
end_games |>
count(lose_team) |>
arrange(desc(n)) |>
rename(team = lose_team, losses = n)
end_games |>
count(win_team) |>
arrange(desc(n)) |>
rename(team = win_team, wins = n) |>
inner_join(end_games |>
count(lose_team) |>
arrange(desc(n)) |>
rename(team = lose_team, losses = n), by = "team")
end_games |>
count(win_team) |>
arrange(desc(n)) |>
rename(team = win_team, wins = n) |>
inner_join(end_games |>
count(lose_team) |>
arrange(desc(n)) |>
rename(team = lose_team, losses = n), by = "team") |>
mutate(pct = wins / (wins + losses))
end_games |>
count(win_team) |>
arrange(desc(n)) |>
rename(team = win_team, wins = n) |>
inner_join(end_games |>
count(lose_team) |>
arrange(desc(n)) |>
rename(team = lose_team, losses = n), by = "team") |>
mutate(pct = wins / (wins + losses)) |>
arrange(desc(pct))
end_games |>
count(win_team) |>
arrange(desc(n)) |>
rename(team = win_team, wins = n) |>
inner_join(end_games |>
count(lose_team) |>
arrange(desc(n)) |>
rename(team = lose_team, losses = n), by = "team") |>
mutate(pct = wins / (wins + losses)) |>
arrange(desc(pct)) |>
pull(team)
pct_ordered_tms = end_games |>
count(win_team) |>
arrange(desc(n)) |>
rename(team = win_team, wins = n) |>
inner_join(end_games |>
count(lose_team) |>
arrange(desc(n)) |>
rename(team = lose_team, losses = n), by = "team") |>
mutate(pct = wins / (wins + losses)) |>
arrange(desc(pct)) |>
pull(team)
scored_allowed_dates |>
mutate(roll_score = rollapply(scored, width = 3, FUN = "mean", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 3, FUN = "mean", align = "right", fill = NA)) |>
na.omit() |>
mutate(pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2),
team = factor(team, levels = pct_ordered_tms)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = team), linewidth = 1.25, show.legend = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
facet_wrap(vars(team)) +
theme(axis.text = element_blank())
all_szn_dates = sort(unique(end_games$date))
get_team_scored_on = function(tm, dt) {
data = end_games |> filter((home_team == tm | away_team == tm) & date == dt)
if (nrow(data) == 0) return(NA)
pts = data |> mutate(my_score = ifelse(home_team == tm, home_score, away_score)) |> pull(my_score)
return(pts)
}
get_team_allowed_on = function(tm, dt) {
data = end_games |> filter((home_team == tm | away_team == tm) & date == dt)
if (nrow(data) == 0) return(NA)
pts = data |> mutate(my_score = ifelse(home_team == tm, away_score, home_score)) |> pull(my_score)
return(pts)
}
scored_allowed_dates = crossing(team = all_teams, date = all_szn_dates) |>
mutate(date = as_date(date)) |>
rowwise() |>
mutate(scored = get_team_scored_on(tm = team, dt = date),
allowed = get_team_allowed_on(tm = team, dt = date)) |>
ungroup() |>
na.omit()
pct_ordered_tms = end_games |>
count(win_team) |>
arrange(desc(n)) |>
rename(team = win_team, wins = n) |>
inner_join(end_games |>
count(lose_team) |>
arrange(desc(n)) |>
rename(team = lose_team, losses = n), by = "team") |>
mutate(pct = wins / (wins + losses)) |>
arrange(desc(pct)) |>
pull(team)
scored_allowed_dates |>
mutate(roll_score = rollapply(scored, width = 2, FUN = "mean", align = "right", fill = NA),
roll_allow = rollapply(allowed, width = 2, FUN = "mean", align = "right", fill = NA)) |>
na.omit() |>
mutate(pythag = (roll_score ^ 2) / (roll_score ^ 2 + roll_allow ^ 2),
team = factor(team, levels = pct_ordered_tms)) |>
ggplot(aes(date, pythag)) +
geom_line(aes(col = team), linewidth = 1.25, show.legend = F) +
geom_hline(yintercept = 0.5, linetype = "dashed", alpha = 0.5) +
facet_wrap(vars(team)) +
theme(axis.text = element_blank())
